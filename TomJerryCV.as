/**FireworksCV.as@author Allison DeJordyCS240 Mini-ProjectThis program reacts to Hulls by generating Fireworks near the Hull. Each Firework is randomly offset in both the x and y directions andreceives a random color (red, blue, green or purple) and rotation.**/package {		import flash.geom.Vector3D;	import flash.geom.ColorTransform;	import flash.events.*;	import flash.display.MovieClip;	import flash.display.Sprite;	import ihart.event.*;	import flash.media.Sound;	import flash.utils.Timer;		public class TomJerryCV extends Sprite{				//set up the socket with localhost, using port 5204		private var hostName:String = "localhost";		//private var hostName:String = "192.168.10.1"; //hallway        private var port:uint = 5204;		//set up a cvManager to handle our CVEvents		private var cvManager : CVManager;		//the maximum y offset of the cheese		private var yOffsetMax = 1005;		//the maximum x offset of the cheese		private var xOffsetMax = 1005;		private var sound: Sound;		var DanceText : DanceText;				//create a vector of cheese		private var cheese : Vector.<Cheese> = new Vector.<Cheese>();						/**		* Constructor; just initializes the cvManager and adds an event listener to it.		*/		public function TomJerryCV() : void {						cvManager = new CVManager(hostName, port);			cvManager.addEventListener(CVEvent.SHELL, getData);			sound = new PaintSound;		}				/**		* Gets data about a CVEvent and fires fireworks based on that data.		*/		public function getData (e : CVEvent) : void {			trace( "getting data " );			var numBlobs : int = e.getNumBlobs();			var blobX : Number;			var blobY : Number;			fireworkX : Number;			fireworkY : Number;			var color : int;			var rot : Number;			var currentCheese : Cheese;									//for every blob there is on the screen			for (var i : int = 0; i < numBlobs; i++) {								currentCheese = new Cheese();								//save the blob's x and y values				blobX = e.getX(i);				blobY = e.getY(i);												//add a random rotation to the cheese (between 0 and 60 degrees)				rot = Math.random() * 60;								currentCheese.rotation = rot;												//add the new cheese to the scene				addChild(currentCheese);								//generate the new cheese's x and y based on the blob's x and y				currentCheese.x = generateOffset(blobX, xOffsetMax);				currentCheese.y = generateOffset(blobY, yOffsetMax);								//add the new cheese to the vector				 cheese.push(currentCheese);								//remove any old cheese				removeOld();							}		}				/**		* Removes fireworks that have disappeared from view from the screen and the vector.		**/		public function removeOld () : void {						//for every firework in the vector			for (var i : int = 0; i < cheese.length; i++) {								//if the reference portion of the cheese is not visible				if (cheese[i].currentFrame == 10) {										//remove the cheese from the screen					removeChild(cheese[i]);										//remove the cheese from the vector					cheese.splice(i, 50);				}							}					}													/**		* Generates a random offset for a cheese's x or y value.		**/		public function generateOffset (initialNum : Number, maxOffset : Number) : Number {						//set the amount of offset randomly			var offset : Number = Math.random() * maxOffset;						//set the sign of the offset (0 is negative, 1 is positive)			var sign : int = Math.floor(Math.random() * 2);						if (sign == 0) {								return initialNum - offset;							}						return initialNum + offset;					}						}	}				